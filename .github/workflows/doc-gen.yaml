#This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

on:
  - push
  - pull_request

env:
  MODULE_PATHS: src tst
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pipenv install pdoc3
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with test_engine
        run: |
          cd HW2
          python -m src.main --go num
          python -m src.main --go sym
          python -m src.main --go rand
          python -m src.main --go the
      - name: Run tests
        run: |
          cd HW2
          python -m coverage run -m src.main --go all
          codeCoverageStr=$(python -m coverage report | grep 'TOTAL')
          codeCoverage=$(echo $codeCoverageStr | awk '{print $4}')
          echo "Code coverage: $codeCoverage"
          #python -m coverage report
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
      - name: Generate documentation  
        run: |
          chmod +x ./docs_generator.sh
          ./docs_generator.sh ${{ env.MODULE_PATHS }}  
      - name: Publish to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./Docs
#       - name: Get the xml output for coverage
#         run: |
#           coverage xml
#       - name: Upload coverage to Codecov
#         uses: codecov/codecov-action@v3
#         with:
#           files: ./coverage.xml
